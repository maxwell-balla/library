openapi: 3.0.0
info:
  title: OpenAPI specification - Library
  description: OpenAPI documentation for Library Project
  version: 1.0.0
  contact:
    name: Maxwell Balla
    email: ballamaxwell7@gmail.com
  license:
    name: Apache-2.0 license
    url: https://github.com/maxwell-balla/library?tab=Apache-2.0-1-ov-file
servers:
  - url: http://localhost:8087
    description: Local Env

paths:
  /api/v1/books:
    get:
      summary: Retrieve a paginated list of books
      description: Returns a paginated list of book responses, sorted by title.
      operationId: getBooks
      parameters:
        - name: page
          in: query
          description: The page number to retrieve (zero-based).
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: The number of records to return per page.
          required: false
          schema:
            type: integer
            default: 10
        - name: sort
          in: query
          required: false
          schema:
            type: string
            default: "title"
      responses:
        '200':
          description: A paginated list of books.
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/BookResponse'
                  pageable:
                    type: object
                    properties:
                      pageNumber:
                        type: integer
                      pageSize:
                        type: integer
                      sort:
                        type: object
                        properties:
                          sorted:
                            type: boolean
                          unsorted:
                            type: boolean
                          empty:
                            type: boolean
                  totalPages:
                    type: integer
                  totalElements:
                    type: integer
                  last:
                    type: boolean
                  first:
                    type: boolean
                  number:
                    type: integer
                  size:
                    type: integer
                  numberOfElements:
                    type: integer
                  empty:
                    type: boolean
        '400':
          description: Bad Request, invalid pagination parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

    post:
      summary: Create a new book
      tags:
        - Book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRequest'
      responses:
        201:
          description: Book created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookResponse'
        400:
          description: Bad Request - Invalid Input or validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        409:
          description: Conflict field
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Internal Server Error - An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /api/v1/books/{title}:
    get:
      summary: Retrieve a book by title
      description: Returns the details of a book specified by its unique title.
      operationId: getBookById
      parameters:
        - name: title
          in: path
          description: The unique title of the book to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A book response with the requested book details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookResponse'
        404:
          description: Book not found for the provided title.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Internal Server Error - An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /api/v1/books/{bookId}:
    delete:
      summary: Delete a book by ID
      description: Deletes the book specified by its unique ID.
      operationId: deleteBook
      parameters:
        - name: bookId
          in: path
          description: The unique identifier of the book to delete.
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Book deleted successfully, no content returned.
        404:
          description: Book not found for the provided ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        500:
          description: Internal Server Error - An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

components:
  schemas:
    BookRequest:
      type: object
      properties:
        title:
          type: string
          uniqueItems: true
        description:
          type: string
      required:
        - title

    BookResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: The ID of the book
        title:
          type: string
          description: The title of the book
        description:
          type: string
          description: The description of the book

    ApiResponse:
      type: object
      properties:
        status:
          type: integer
        success:
          type: boolean
        timestamp:
          type: string
          format: date-time
        message:
          type: string
        details:
          type: string